trigger:
  - main
  - develop

pool:
  vmImage: "ubuntu-latest"

variables:
  buildConfiguration: "Release"
  organization: 'jailtonjunior94'
  projectKey: 'JailtonJunior94_csharp-finances'
  projectName: 'csharp-finances'

stages:
  - stage: Build
    displayName: Build
    jobs:
      - job: Build
        displayName: Build
        steps:
          - script: dotnet restore
            displayName: "Restoring Packages"

          - script: dotnet build --configuration $(buildConfiguration)
            displayName: "Building Project"
          - task: PublishPipelineArtifact@1
            inputs:
              artifactName: 'manifests'
              path: '.k8s'

  - stage: TestsAndSonarCloud
    displayName: Tests And Sonar Cloud
    jobs:
      - job: TestsAndSonarCloud
        displayName: Tests And Sonar Cloud
        steps:
          - task: DotNetCoreCLI@2
            displayName: "dotnet test"
            inputs:
              command: "test"
              projects: "**/*Tests.csproj"
              arguments: "--configuration $(BuildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=opencover --logger trx"
              publishTestResults: true

          - task: reportgenerator@4
            displayName: ReportGenerator
            inputs:
              reports: "$(Build.SourcesDirectory)/test/**/coverage.opencover.xml"
              targetdir: "$(Build.SourcesDirectory)/CodeCoverage"
              assemblyfilters: "-xunit*"
  
          - task: PublishCodeCoverageResults@1
            displayName: "Publish code coverage"
            inputs:
              codeCoverageTool: Cobertura
              summaryFileLocation: "$(Build.SourcesDirectory)/CodeCoverage/Cobertura.xml"
              reportDirectory: "$(Build.SourcesDirectory)/CodeCoverage"

          - task: SonarCloudPrepare@1
            inputs:
              SonarCloud: 'Sonar_Cloud'
              organization: $(organization)
              scannerMode: 'MSBuild'
              projectKey: $(projectKey)
              projectName: $(projectName)
              extraproperties: | 
                sonar.exclusions=**/obj/**,**/*.dll
                sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/**/coverage.opencover.xml
                sonar.cs.vstest.reportsPaths=$(Agent.TempDirectory)/*.trx
          
          - script: dotnet build --configuration $(buildConfiguration)
            displayName: "Building Project"

          - task: SonarCloudAnalyze@1

          - task: SonarCloudPublish@1
            inputs:
              pollingTimeoutSec: '300'
              
              
  - stage: Docker
    displayName: Docker Build and Push (ACR)
    jobs:
      - job: Docker 
        displayName: Docker Build and Push (ACR)
        steps:
          - task: Docker@2
            displayName: Login to ACR
            inputs:
             command: login
             containerRegistry: Microsoft_Azure_RM

          - task: Docker@2
            inputs:
              containerRegistry: Microsoft_Azure_RM
              repository: "financesregistry.azurecr.io/finance-api"
              command: "buildAndPush"
              Dockerfile: "**/Dockerfile"
              tags: |
                $(Build.BuildId)
                latest
